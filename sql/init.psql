--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: niko; Type: DATABASE; Schema: -; Owner: niko
--

CREATE DATABASE niko WITH TEMPLATE = template0 ENCODING = 'UTF8' LC_COLLATE = 'en_US.UTF-8' LC_CTYPE = 'en_US.UTF-8';


ALTER DATABASE niko OWNER TO niko;

\connect niko

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: features; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE features (
    function_text_id integer
);


ALTER TABLE features OWNER TO niko;

--
-- Name: arith_counter_feature; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE arith_counter_feature (
    mn_add integer,
    mn_sub integer,
    mn_mul integer,
    mn_div integer,
    mn_imul integer,
    mn_idiv integer,
    mn_inc integer,
    mn_dec integer,
    mn_neg integer,
    mn_sar integer,
    mn_sal integer,
    mn_addl integer,
    mn_subl integer
)
INHERITS (features);


ALTER TABLE arith_counter_feature OWNER TO niko;

--
-- Name: bitop_counter_feature; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE bitop_counter_feature (
    mn_shr integer,
    mn_shl integer,
    mn_shld integer,
    mn_shrd integer,
    mn_ror integer,
    mn_rol integer,
    mn_rorl integer,
    mn_roll integer,
    mn_rcr integer,
    mn_rcl integer,
    mn_and integer,
    mn_or integer,
    mn_xor integer,
    mn_not integer
)
INHERITS (features);


ALTER TABLE bitop_counter_feature OWNER TO niko;

--
-- Name: call_counter_feature; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE call_counter_feature (
    mn_call integer
)
INHERITS (features);


ALTER TABLE call_counter_feature OWNER TO niko;

--
-- Name: function_text; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE function_text (
    id integer NOT NULL,
    hash bytea,
    signature text,
    disassembly text
);


ALTER TABLE function_text OWNER TO niko;

--
-- Name: function_text_id_seq; Type: SEQUENCE; Schema: public; Owner: niko
--

CREATE SEQUENCE function_text_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE function_text_id_seq OWNER TO niko;

--
-- Name: function_text_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: niko
--

ALTER SEQUENCE function_text_id_seq OWNED BY function_text.id;


--
-- Name: functions; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE functions (
    id integer NOT NULL,
    objectid integer,
    signature text,
    source_file text,
    name character varying,
    function_text_id integer,
    function_text_lines integer
);


ALTER TABLE functions OWNER TO niko;

--
-- Name: COLUMN functions.function_text_lines; Type: COMMENT; Schema: public; Owner: niko
--

COMMENT ON COLUMN functions.function_text_lines IS 'caches the number of lines in the related function_text table. Cache is done here because a common operation is reading the "function shortinfo", which depends on knowledge of this.';


--
-- Name: functions_id_seq; Type: SEQUENCE; Schema: public; Owner: niko
--

CREATE SEQUENCE functions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE functions_id_seq OWNER TO niko;

--
-- Name: functions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: niko
--

ALTER SEQUENCE functions_id_seq OWNED BY functions.id;


--
-- Name: jmp_counter_feature; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE jmp_counter_feature (
    mn_jmp integer,
    mn_je integer,
    mn_jne integer,
    mn_jz integer,
    mn_jnz integer,
    mn_jg integer,
    mn_jge integer,
    mn_ja integer,
    mn_jae integer,
    mn_jl integer,
    mn_jle integer,
    mn_jb integer,
    mn_jbe integer,
    mn_jo integer,
    mn_jno integer,
    mn_js integer,
    mn_jns integer,
    mn_loop integer,
    mn_loope integer,
    mn_loopne integer,
    mn_loopnz integer,
    mn_loopz integer
)
INHERITS (features);


ALTER TABLE jmp_counter_feature OWNER TO niko;

--
-- Name: mnemonic_counter_feature; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE mnemonic_counter_feature (
    mn_fsqrt integer,
    mn_fsin integer,
    mn_fcos integer,
    mn_fsincos integer,
    mn_fptan integer,
    mn_fpatan integer,
    mn_div integer,
    mn_idiv integer,
    mn_bsr integer,
    mn_bsf integer,
    mn_sti integer,
    mn_cpuid integer,
    mn_divss integer,
    mn_divps integer,
    mn_sqrtss integer,
    mn_sqrtps integer
)
INHERITS (features);


ALTER TABLE mnemonic_counter_feature OWNER TO niko;

--
-- Name: objects; Type: TABLE; Schema: public; Owner: niko; Tablespace: 
--

CREATE TABLE objects (
    id integer NOT NULL,
    filepath character varying NOT NULL,
    mtime timestamp with time zone NOT NULL,
    compiler character varying,
    compiler_version character varying,
    opt_level character(1),
    is_static boolean,
    flags text[],
    locked boolean DEFAULT false,
    repository text
);


ALTER TABLE objects OWNER TO niko;

--
-- Name: objects_id_seq; Type: SEQUENCE; Schema: public; Owner: niko
--

CREATE SEQUENCE objects_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE objects_id_seq OWNER TO niko;

--
-- Name: objects_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: niko
--

ALTER SEQUENCE objects_id_seq OWNED BY objects.id;


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: niko
--

ALTER TABLE ONLY function_text ALTER COLUMN id SET DEFAULT nextval('function_text_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: niko
--

ALTER TABLE ONLY functions ALTER COLUMN id SET DEFAULT nextval('functions_id_seq'::regclass);


--
-- Name: id; Type: DEFAULT; Schema: public; Owner: niko
--

ALTER TABLE ONLY objects ALTER COLUMN id SET DEFAULT nextval('objects_id_seq'::regclass);


--
-- Name: function_pkey; Type: CONSTRAINT; Schema: public; Owner: niko; Tablespace: 
--

ALTER TABLE ONLY functions
    ADD CONSTRAINT function_pkey PRIMARY KEY (id);


--
-- Name: function_text_hash_key; Type: CONSTRAINT; Schema: public; Owner: niko; Tablespace: 
--

ALTER TABLE ONLY function_text
    ADD CONSTRAINT function_text_hash_key UNIQUE (hash);


--
-- Name: function_text_pkey; Type: CONSTRAINT; Schema: public; Owner: niko; Tablespace: 
--

ALTER TABLE ONLY function_text
    ADD CONSTRAINT function_text_pkey PRIMARY KEY (id);


--
-- Name: objectfile_pkey; Type: CONSTRAINT; Schema: public; Owner: niko; Tablespace: 
--

ALTER TABLE ONLY objects
    ADD CONSTRAINT objectfile_pkey PRIMARY KEY (id);


--
-- Name: function_object_fkey; Type: FK CONSTRAINT; Schema: public; Owner: niko
--

ALTER TABLE ONLY functions
    ADD CONSTRAINT function_object_fkey FOREIGN KEY (objectid) REFERENCES objects(id) ON DELETE CASCADE;


--
-- Name: functions_function_text_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: niko
--

ALTER TABLE ONLY functions
    ADD CONSTRAINT functions_function_text_id_fkey FOREIGN KEY (function_text_id) REFERENCES function_text(id);


--
-- Name: features_function_fkey; Type: FK CONSTRAINT; Schema: public; Owner: niko
--

ALTER TABLE ONLY features
    ADD CONSTRAINT features_function_fkey FOREIGN KEY (function_text_id) REFERENCES function_text(id);


--
-- PostgreSQL database dump complete
--

